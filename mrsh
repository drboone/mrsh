#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long;
use Pod::Usage;

use App::MrShell;

my @hosts;
Getopt::Long::Configure("bundling"); # make switches case sensitive (and turn on bundling)
GetOptions("--host|H=s@"=>\@hosts, "--help|h"=>sub { pod2usage(-verbose=>1) }) or pod2usage();
pod2usage() unless @ARGV;

App::MrShell

    -> new
    -> set_usage_error("pod2usage", -verbose=>2)
    -> read_config("$ENV{HOME}/.mrshrc")
    -> set_hosts(@hosts)    # tell Mr. Shell where to run things
    -> queue_command(@ARGV) # queue a command for whatever hosts are set
    -> run_queue;           # tell POE to do what POE does

__END__

=head1 NAME

mrsh - Mr. Shell runs a command on multiple hosts

=head1 SYNOPSIS

    mrsh --host blarg1 --host blarg2 uptime

=head1 DESCRIPTION

=over

=item B<--host> B<-H>

Names of hosts upon which to run commands.

=back

=head1 AUTHOR

Paul Miller C<< <jettero@cpan.org >>

L<http://github.com/jettero>

=head1 COPYRIGHT

Copyright 2009 - Paul Miller

Released as GPL, like the original Mr. Shell circa 1997.

=head1 SEE ALSO

ssh(1), perl(1), L<POE>, L<POE::Wheel::Run>

=cut
